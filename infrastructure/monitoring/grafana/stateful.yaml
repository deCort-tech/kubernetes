apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: grafana
  namespace: monitoring-system
  labels: &Labels
    k8s-app: grafana
    app.kubernetes.io/name: grafana
    app.kubernetes.io/component: grafana
spec:
  serviceName: grafana
  replicas: 1
  selector:
    matchLabels: *Labels
  template:
    metadata:
      labels: *Labels
    spec:
      serviceAccountName: grafana-sa
      securityContext:
        runAsUser: 1000
        fsGroup: 2000
        runAsNonRoot: true
      containers:
        - name: grafana
          image: grafana/grafana
          imagePullPolicy: Always
          volumeMounts:
            - name: grafana-ini
              mountPath: "/etc/grafana/"
            - name: kubernetes-dashboards
              mountPath: "/var/lib/grafana/dashboards/kubernetes"
            - name: grafana-provisioning
              mountPath: "/etc/grafana/provisioning/dashboards"
            - name: grafana-datasources
              mountPath: "/etc/grafana/provisioning/datasources"
            - name: grafana-notifiers
              mountPath: "/etc/grafana/provisioning/notifiers"
            - name: grafana-data
              mountPath: "/var/lib/grafana"
          ports:
            - name: service
              containerPort: 80
              protocol: TCP
            - name: grafana
              containerPort: 3000
              protocol: TCP
          env:
            - name: GF_SECURITY_ADMIN_USER
              valueFrom:
                secretKeyRef:
                  name: grafana-secrets
                  key: admin-user
            - name: GF_SECURITY_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: grafana-secrets
                  key: admin-password
            - name: GF_AUTH_AZUREAD_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: grafana-secrets
                  key: oauth
          livenessProbe:
            httpGet:
              path: /api/health
              port: 3000
          readinessProbe:
            httpGet:
              path: /api/health
              port: 3000
            initialDelaySeconds: 60
            timeoutSeconds: 9
            failureThreshold: 10
            periodSeconds: 10
          resources:
            limits:
              cpu: 50m
              memory: 100Mi
            requests:
              cpu: 50m
              memory: 100Mi
      volumes:
        - name: grafana-ini
          configMap:
            name: grafana-ini
        - name: grafana-datasources
          configMap:
            name: grafana-datasources
        - name: grafana-provisioning
          configMap:
            name: grafana-provisioning
        - name: grafana-notifiers
          configMap:
            name: grafana-notifiers
        - name: grafana-dashboards
          configMap:
            name: grafana-dashboards
  volumeClaimTemplates:
  - metadata:
      name: grafana-data
    spec:
      storageClassName: longhorn
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: "2Gi"
---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  labels:
    k8s-app: grafana
    app.kubernetes.io/name: grafana
    app.kubernetes.io/component: grafana
spec:
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 3000
  selector:
    k8s-app: grafana