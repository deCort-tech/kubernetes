apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  labels:
    traefik2: "true"
  name: minio
  namespace: minio-system
  annotations:
    kubernetes.io/ingress.class: traefik
    #traefik.ingress.kubernetes.io/rule-type: "PathPrefixStrip"
    kubernetes.io/tls-acme: "true"
    cert-manager.io/acme-dns01-provider: route53
    cert-manager.io/acme-challenge-type: dns01
    cert-manager.io/cluster-issuer: letsencrypt
spec:
  rules:
  - host: s3.decort.tech
    http:
      paths:
      - path: /cert-placeholder
        backend:
          serviceName: minio-service
          servicePort: websecure
  tls:
  - hosts:
    - s3.decort.tech
    secretName: minio-cert 
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: minio
  namespace: minio-system
spec:
  entryPoints:
    - web
    - websecure
    - minio
  routes:
    - match: Host(`s3.decort.tech`) && PathPrefix(`/`)
      kind: Rule
      services:
        - name: minio-service
          port: 9000
      middlewares:
        - name: minio-security
        #- name: traefik-auth
        - name: minio-ipwhitelist
  tls:
    secretName: minio-cert
---
apiVersion: traefik.containo.us/v1alpha1
kind: TLSOption
metadata:
  name: minio-tlsoption
spec:
  cipherSuites:
  - TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
  - TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305
  - TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305
  - TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256
  - TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256
  minVersion: VersionTLS12
  sniStrict: true