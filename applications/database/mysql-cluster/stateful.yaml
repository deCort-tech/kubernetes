apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mariadb
  namespace: ghost-blog
spec:
  selector:
    matchLabels:
      app: mariadb
  serviceName: "mariadb"
  replicas: 3
  podManagementPolicy: OrderedReady
  template:
    metadata:
      labels:
        app: mariadb
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9104"
    spec:
      terminationGracePeriodSeconds: 30
      initContainers:
      - name: init-config
        command: ['/bin/bash', '/etc/mysql/conf.d-configmap/init.sh']
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: DATADIR
          value: /data/db
        - name: AUTO_NEW_CLUSTER
          value: "false"
        - name: WSREP_CLUSTER_ADDRESS
          value: "gcomm://mariadb-0.mariadb,mariadb-1.mariadb,mariadb-2.mariadb"
        workingDir: /etc/mysql/conf.d-configmap
        volumeMounts:
        - name: mysql
          mountPath: /data
        - name: conf-readonly
          mountPath: /etc/mysql/conf.d-configmap
        - name: conf
          mountPath: /etc/mysql/conf.d
        - name: initdb
          mountPath: /docker-entrypoint-initdb.d
        image: mariadb:10.2.31@sha256:1e1193ba3708a73ee28c2ab56c5c6527b39ac58510d19252f020c0903aa5d86a
      containers:
      - name: mariadb
        image: mariadb:10.2.31@sha256:1e1193ba3708a73ee28c2ab56c5c6527b39ac58510d19252f020c0903aa5d86a
        ports:
        - containerPort: 3306
          name: mysql
        - containerPort: 4444
          name: sst
        - containerPort: 4567
          name: replication
        - containerPort: 4567
          protocol: UDP
          name: replicationudp
        - containerPort: 4568
          name: ist
        env:
        - name: MYSQL_ROOT_HOST
          value: "0.0.0.0"
        - name: MYSQL_ALLOW_EMPTY_PASSWORD
          value: "no"
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: ghost-secrets
              key: db-root-pw
        - name: MYSQL_DATABASE
          value: "ghost-db"
        - name: MYSQL_USER
          valueFrom:
            secretKeyRef:
              name: ghost-secrets
              key: ghost-db-user
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: ghost-secrets
              key: ghost-db-password
        - name: MYSQL_INITDB_SKIP_TZINFO
          value: "yes"
        livenessProbe:
          exec:
            command: ["echo", "hello"]
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 10
        readinessProbe:
          exec:
           # Check we can execute queries over TCP (skip-networking is off).
            command:
            - bash 
            - "-c" 
            - | 
              mysql -uroot -p$MYSQL_ROOT_PASSWORD -h 127.0.0.1 -e 'SELECT 1'            
          initialDelaySeconds: 60
          periodSeconds: 2
          timeoutSeconds: 1
        volumeMounts:
        - name: mysql
          mountPath: /data
        - name: conf
          mountPath: /etc/mysql/conf.d
        - name: initdb
          mountPath: /docker-entrypoint-initdb.d
      - name: metrics
        image: prom/mysqld-exporter:v0.12.1@sha256:9fe9938c4ac9216cc24005144338f14fac4f604f139b481cc541bead008db3c1
        env:
        - name: DATA_SOURCE_NAME
          value: root@(localhost:3306)/
        ports:
        - containerPort: 9104
      volumes:
      - name: conf
        emptyDir: {}
      - name: conf-readonly
        configMap:
          name: conf-d
      - name: initdb
        emptyDir: {}
  volumeClaimTemplates:
  - metadata:
      name: mysql
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: longhorn
      resources:
        requests:
          storage: 2Gi
---
apiVersion: v1
kind: Service
metadata:
  name: mariadb
  namespace: ghost-blog
  annotations:
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
spec:
  publishNotReadyAddresses: true
  clusterIP: None
  selector:
    app: mariadb
  ports:
    - port: 3306
      name: mysql
    - port: 4444
      name: sst
    - port: 4567
      name: replication
    - protocol: UDP
      port: 4567
      name: replicationudp
    - port: 4568
      name: ist
---
apiVersion: v1
kind: Service
metadata:
  name: mysql
  namespace: ghost-blog
spec:
  ports:
  - port: 3306
    name: mysql
  selector:
    app: mariadb